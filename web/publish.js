var Web3 = require("web3");
var web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:9545/"));

var acc = web3.eth.accounts[0]; //get the first account

var abi = [
  {
    "constant": true,
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "name": "name",
        "type": "string"
      },
      {
        "indexed": false,
        "name": "ID",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "name": "picHash",
        "type": "string"
      }
    ],
    "name": "LogNewProduct",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "name": "productName",
        "type": "string"
      },
      {
        "indexed": false,
        "name": "quantity",
        "type": "uint256"
      }
    ],
    "name": "LogPurchase",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "ID",
        "type": "bytes32"
      },
      {
        "name": "quantity",
        "type": "uint256"
      }
    ],
    "name": "buy",
    "outputs": [],
    "payable": true,
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "ID",
        "type": "bytes32"
      },
      {
        "name": "newQuantity",
        "type": "uint256"
      }
    ],
    "name": "update",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "price",
        "type": "uint256"
      },
      {
        "name": "quantity",
        "type": "uint256"
      },
      {
        "name": "picHash",
        "type": "string"
      }
    ],
    "name": "newProduct",
    "outputs": [
      {
        "name": "",
        "type": "bytes32"
      }
    ],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "ID",
        "type": "bytes32"
      }
    ],
    "name": "removeProduct",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "ID",
        "type": "bytes32"
      },
      {
        "name": "newPrice",
        "type": "uint256"
      }
    ],
    "name": "increasePrice",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "ID",
        "type": "bytes32"
      }
    ],
    "name": "getProduct",
    "outputs": [
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "price",
        "type": "uint256"
      },
      {
        "name": "quantity",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "getProducts",
    "outputs": [
      {
        "name": "",
        "type": "bytes32[]"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "ID",
        "type": "bytes32"
      },
      {
        "name": "quantity",
        "type": "uint256"
      }
    ],
    "name": "getPrice",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [],
    "name": "withdraw",
    "outputs": [],
    "payable": false,
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "getBalance",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "stateMutability": "view",
    "type": "function"
  }
]

var bytecode = "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116a6806100536000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ddeb632146100bf57806312065fe0146100ed5780632cf3254e146101185780633a20e9df146101535780633ccfd60b1461020b5780638da5cb5b14610222578063a26ea49614610279578063a58bb84a146102aa578063c29b2f20146102e5578063c9280f0614610351578063ee69ed83146103a0578063f2fde38b1461047f575b600080fd5b6100eb6004803603810190808035600019169060200190929190803590602001909291905050506104c2565b005b3480156100f957600080fd5b50610102610663565b6040518082815260200191505060405180910390f35b34801561012457600080fd5b50610151600480360381019080803560001916906020019092919080359060200190929190505050610682565b005b34801561015f57600080fd5b506101826004803603810190808035600019169060200190929190505050610734565b6040518080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156101ce5780820151818401526020810190506101b3565b50505050905090810190601f1680156101fb5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561021757600080fd5b5061022061086e565b005b34801561022e57600080fd5b5061023761094a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028557600080fd5b506102a8600480360381019080803560001916906020019092919050505061096f565b005b3480156102b657600080fd5b506102e3600480360381019080803560001916906020019092919080359060200190929190505050610afe565b005b3480156102f157600080fd5b506102fa610bba565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561033d578082015181840152602081019050610322565b505050509050019250505060405180910390f35b34801561035d57600080fd5b5061038a600480360381019080803560001916906020019092919080359060200190929190505050610c16565b6040518082815260200191505060405180910390f35b3480156103ac57600080fd5b50610461600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610cae565b60405180826000191660001916815260200191505060405180910390f35b34801561048b57600080fd5b506104c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fcd565b005b816104e6600160008360001916600019168152602001908152602001600020611122565b15156104f157600080fd5b61052034836001600087600019166000191681526020019081526020016000206111d39092919063ffffffff16565b151561052b57600080fd5b6105588260016000866000191660001916815260200190815260200160002061120890919063ffffffff16565b7ffdf9fde64a309b920567412fe6a933942ccfff6922806daebff52e68fe269c906001600085600019166000191681526020019081526020016000206000018360405180806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b5050935050505060405180910390a161065e836001600086600019166000191681526020019081526020016000206002015461122b565b505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106dd57600080fd5b81610701600160008360001916600019168152602001908152602001600020611122565b151561070c57600080fd5b8160016000856000191660001916815260200190815260200160002060010181905550505050565b60606000808361075d600160008360001916600019168152602001908152602001600020611122565b151561076857600080fd5b6001600086600019166000191681526020019081526020016000206000016001600087600019166000191681526020019081526020016000206001015460016000886000191660001916815260200190815260200160002060020154828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108595780601f1061082e57610100808354040283529160200191610859565b820191906000526020600020905b81548152906001019060200180831161083c57829003601f168201915b50505050509250935093509350509193909250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108c957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610947573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109cc57600080fd5b816109f0600160008360001916600019168152602001908152602001600020611122565b15156109fb57600080fd5b610a1e600160008560001916600019168152602001908152602001600020611360565b600160008460001916600019168152602001908152602001600020600301549150600282815481101515610a4e57fe5b90600052602060002001600090556002600160028054905003815481101515610a7357fe5b9060005260206000200154600283815481101515610a8d57fe5b90600052602060002001816000191690555081600160006002600160028054905003815481101515610abb57fe5b906000526020600020015460001916600019168152602001908152602001600020600301819055506002805480919060019003610af891906114cb565b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5957600080fd5b81610b7d600160008360001916600019168152602001908152602001600020611122565b1515610b8857600080fd5b8160016000856000191660001916815260200190815260200160002060020181905550610bb5838361122b565b505050565b60606002805480602002602001604051908101604052809291908181526020018280548015610c0c57602002820191906000526020600020905b81546000191681526020019060010190808311610bf4575b5050505050905090565b600082610c3c600160008360001916600019168152602001908152602001600020611122565b1515610c4757600080fd5b826001600086600019166000191681526020019081526020016000206002015410151515610c7457600080fd5b610ca583600160008760001916600019168152602001908152602001600020600101546113a090919063ffffffff16565b91505092915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d0c57600080fd5b856040518082805190602001908083835b602083101515610d425780518252602082019150602081019050602083039250610d1d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050610d94600160008360001916600019168152602001908152602001600020611122565b151515610da057600080fd5b6002819080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550610de98686866001600280549050036000886113db565b6001600083600019166000191681526020019081526020016000206000820151816000019080519060200190610e209291906114f7565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a0820151816005019080519060200190610e7b9291906114f7565b509050507fd287f844d29f4834212ef69d5ab8f1f1b2ba1e45403b0c3762e0bdab8664dff68682856040518080602001846000191660001916815260200180602001838103835286818151815260200191508051906020019080838360005b83811015610ef5578082015181840152602081019050610eda565b50505050905090810190601f168015610f225780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f5b578082015181840152602081019050610f40565b50505050905090810190601f168015610f885780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a18360016000836000191660001916815260200190815260200160002060020154141515610fc157fe5b80915050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561102857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561106457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006060826000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111be5780601f10611193576101008083540402835291602001916111be565b820191906000526020600020905b8154815290600101906020018083116111a157829003601f168201915b50505050509050600081511415915050919050565b60006111e8828461142b90919063ffffffff16565b8460010154111580156111ff575081846002015410155b90509392505050565b61121f81836002015461144690919063ffffffff16565b82600201819055505050565b60058111158015611265575060016000836000191660001916815260200190815260200160002060040160009054906101000a900460ff16155b156112c4576001806000846000191660001916815260200190815260200160002060040160006101000a81548160ff0219169083151502179055506112c360016000846000191660001916815260200190815260200160002061145f565b5b6005811180156112fc575060016000836000191660001916815260200190815260200160002060040160009054906101000a900460ff165b1561135c57600060016000846000191660001916815260200190815260200160002060040160006101000a81548160ff02191690831515021790555061135b600160008460001916600019168152602001908152602001600020611495565b5b5050565b6020604051908101604052806000815250816000019080519060200190611388929190611577565b50600081600101819055506000816002018190555050565b60008060008414156113b557600091506113d4565b82840290508284828115156113c657fe5b041415156113d057fe5b8091505b5092915050565b6113e36115f7565b6113eb6115f7565b60c0604051908101604052808981526020018881526020018781526020018681526020018515158152602001848152509050809150509695505050505050565b600080828481151561143957fe5b0490508091505092915050565b600082821115151561145457fe5b818303905092915050565b61148a600a61147c600c84600101546113a090919063ffffffff16565b61142b90919063ffffffff16565b816001018190555050565b6114c0600a6114b2600c846001015461142b90919063ffffffff16565b6113a090919063ffffffff16565b816001018190555050565b8154818355818111156114f2578183600052602060002091820191016114f19190611630565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061153857805160ff1916838001178555611566565b82800160010185558215611566579182015b8281111561156557825182559160200191906001019061154a565b5b5090506115739190611655565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115b857805160ff19168380011785556115e6565b828001600101855582156115e6579182015b828111156115e55782518255916020019190600101906115ca565b5b5090506115f39190611655565b5090565b60c06040519081016040528060608152602001600081526020016000815260200160008152602001600015158152602001606081525090565b61165291905b8082111561164e576000816000905550600101611636565b5090565b90565b61167791905b8082111561167357600081600090555060010161165b565b5090565b905600a165627a7a72305820b903565cec5472bd762e5cd5b6514ecfe0d21f76d3c2eff0ee36717c9475afe50029"

//create the contract instance. We can use this instance to publish or connect to a published contract
var Contract = web3.eth.contract(abi);

//create a JS Object (key-value pairs), holding the data we need to publish our contract
var publishData = {
	"from": acc, //the account from which it will be published
	"data": bytecode,
	"gas": 4000000 //gas limit. This should be the same or lower than Ethereum's gas limit
}

//publish the contract, passing a callback that will be called twice. Once when the transaction is sent, and once when it is mined
//the first argument is the constructor argument
Contract.new(publishData, function(err, contractInstance) {
	if(!err) {
		if(contractInstance.address) { //if the contract has an address aka if the transaction is mined
			console.log("New contract address is :", contractInstance.address);
		}
	} else {
		console.error(err); //something went wrong
	}
});
